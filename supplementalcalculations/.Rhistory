# libraries
library(dplyr)
library(stringr)
library(tidyr)
library(reshape2)
library(ggplot2)
library(cowplot)
library(scales)
library(hydroGOF)
library(lubridate)
path <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/GitHub/public/WaterConservation_ClimateChange_ABM'
# set directories
maindir <- path                                                             # main directory
datadir <- paste(path, '/observedData', sep = '')                           # directory for the input data
abmresultsdir <- paste(path, '/abmresults', sep = '')                       # directory for ABM results
rdatadir <- paste(path, '/supplementalcalculations/rdatafiles/', sep = '')  # directory for storing rdata files
sensitivityanalysis <- read.csv(paste(abmresultsdir, '/sensitivityanalysis_observations.csv', sep = ''), header = F, na.string = "")
View(sensitivityanalysis)
sensitivityanalysis <- read.csv(paste(abmresultsdir, '/sensitivityanalysis_observations.csv', sep = ''), header = F, na.string = "")
# read in original data
denverobs <- read.csv(paste(datadir, '/DenverWaterBalData_Original.csv', sep =''), header = T, na.string = "")
datadir
# read in original data
denverobs <- read.csv(paste(datadir, '/DenverWaterBalData.csv', sep =''), header = F, na.string = "")
lasvegasobs <- read.csv(paste(datadir, '/LasVegasWaterBalData.csv', sep =''), header = F, na.string = "")
phoenixobs <- read.csv(paste(datadir, '/PhoenixWaterBalData.csv', sep =''), header = F, na.string = "")
View(denverobs)
# get dates
obsdates <- seq.Date(as.Date('2007-01-01'), as.Date('2018-12-31'), by = 'month')
histdates <- seq.Date(as.Date('1976-01-01'), as.Date('2005-12-31'), by = 'month')
futuredates <- seq.Date(as.Date('2006-01-01'), as.Date('2099-12-31'), by = 'month')
# add dates to dataframes
denverobs$X <- obsdates; lasvegasobs$X <- obsdates; phoenixobs$X <- obsdates[1:132]
# add dates to dataframes
denverobs$X <- obsdates; lasvegasobs$X <- obsdates; phoenixobs$X <- obsdates[1:131]
archetypescenarios$Date <- c.Date(NA, NA, obsdates[1:143])
View(sensitivityanalysis)
sensitivityanalysis$Date <- c.Date(NA, NA, NA, obsdates[1:143])
Date(NA, NA, NA, obsdates[1:143])
c.Date(NA, NA, NA, obsdates[1:143])
sensitivityanalysis$Date <- c.Date(NA, NA, NA, obsdates[1:144])
sensitivityanalysis$Date <- c.Date(NA, NA, NA, obsdates[1:142])
View(sensitivityanalysis)
# read in scenario results csv files
archetypescenarios <- read.csv(paste(abmresultsdir, '/scenarioresults_observations.csv', sep = ''), header = F, na.string = "")
archetypescenarios$Date <- c.Date(NA, NA, obsdates[1:143])
View(archetypescenarios)
# prepping datasets for melting
newcolumnnames <- paste(archetypescenarios[1,], archetypescenarios[2,], names(archetypescenarios), sep = "_")
newcolumnnames
sensitivityanalysis[1,]
sensitivityanalysis[2,]
sensitivityanalysis[3,]
newcolumnnames2 <- paste(sensitivityanalysis[1,], sensitivityanalysis[2,], sensitivityanalysis[3,], sep = "_")
newcolumnnames2
View(sensitivityanalysis)
names(sensitivityanalysis)[1:91] <- newcolumnnames2[1:91]
View(sensitivityanalysis)
sensitivityanalysis <- sensitivityanalysis[-c(1:3),]
View(sensitivityanalysis)
# melting
scenarios1 <- melt(archetypescenarios, id = 'Date')
sensivity <- melt(sensitivityanalysis, id = 'Date')
View(sensivity)
# splitting the "variable" column into multiple descriptors
scenarios1 <- separate(scenarios1, 'variable', into = c('scenario', 'city', 'model run'), sep = '_')
sensivity <- separate(sensivity, 'variable', into = c('starting_condition', 'city', 'model run'), sep = '_')
View(scenarios1)
# prepping datasets for melting
newcolumnnames <- paste(archetypescenarios[1,], archetypescenarios[2,], names(archetypescenarios), sep = "_")
names(archetypescenarios)[1:1800] <- newcolumnnames[1:1800]
archetypescenarios <- archetypescenarios[-c(1:2),]
# melting
scenarios1 <- melt(archetypescenarios, id = 'Date')
# splitting the "variable" column into multiple descriptors
scenarios1 <- separate(scenarios1, 'variable', into = c('scenario', 'city', 'model run'), sep = '_')
View(scenarios1)
View(sensivity)
sensivity <- separate(sensivity, 'variable', into = c('city', 'starting condition', 'repetition'), sep = '_')
sensivity <- melt(sensitivityanalysis, id = 'Date')
sensivity <- separate(sensivity, 'variable', into = c('city', 'starting condition', 'repetition'), sep = '_')
View(sensivity)
# convert to numeric
scenarios1$value <- as.numeric(scenarios1$value)
sensivity$value <- as.numeric(sensivity$value)
View(sensivity)
# organize city observations:
pltdata_d <- data.frame('Date' = denverobs$X, 'city' = rep('Denver', 144), 'model run' = rep('observations', 144), 'value' = denverobs$S, check.names = F)
View(denverobs)
denverobs$X
# organize city observations:
pltdata_d <- data.frame('Date' = denverobs$X, 'city' = rep('Denver', 144), 'model run' = rep('observations', 144), 'value' = denverobs[,1], check.names = F)
View(pltdata_d)
View(sensivity)
# organize city observations:
pltdata_d <- data.frame('Date' = denverobs$X, 'city' = rep('Denver', 144), 'repetition' = rep('observations', 144), 'value' = denverobs[,1], check.names = F)
pltdata_lv <- data.frame('Date' = lasvegasobs$X, 'city' = rep('Las Vegas', 144), 'repetition' = rep('observations', 144), 'value' = lasvegasobs[,1], check.names = F)
pltdata_p <- data.frame('Date' = phoenixobs$X, 'city' = rep('Phoenix', 132), 'repetition' = rep('observations', 132), 'value' = phoenixobs[,1], check.names = F)
phoenixobs$X
pltdata_p <- data.frame('Date' = phoenixobs$X, 'city' = rep('Phoenix', 131), 'repetition' = rep('observations', 131), 'value' = phoenixobs[,1], check.names = F)
View(sensivity)
# get averages over 100 model runs
averages <- sensivity %>% group_by(Date, city, `starting condition`) %>% summarize(mean(value))
View(averages)
names(averages)[3] <- 'value'
averages$repetition <- rep('average', 429)
averages$repetition <- rep('average', 2556)
averages <- averages[,c(1,2,4,3)]
View(averages)
names(averages)[3] <- 'value'
View(averages)
averages$repetition <- rep('average', 2556)
View(averages)
# get averages over 100 model runs
averages <- sensivity %>% group_by(Date, city, `starting condition`) %>% summarize(mean(value))
names(averages)[3] <- 'value'
averages$repetition <- rep('average', 2556)
View(averages)
# get averages over 100 model runs
averages <- sensivity %>% group_by(Date, city, `starting condition`) %>% summarize(mean(value))
View(averages)
names(averages)[4] <- 'value'
View(averages)
averages$repetition <- rep('average', 2556)
View(averages)
View(sensivity)
View(averages)
averages <- averages[,c(1,2,3,5,4)]
View(averages)
# merge everything
plotdata <- rbind(averages, pltdata_d, pltdata_lv, pltdata_p, sensitivity)
# merge everything
plotdata <- rbind(averages, pltdata_d, pltdata_lv, pltdata_p, sensivity)
View(plotdata)
# create model run type column
plotdata$runtype <- case_when(str_detect(plotdata$repetition, 'aver') ~ 'average',
str_detect(plotdata$repetition, 'obs') ~ 'observation',
.default = 'model run')
View(plotdata)
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run'),], aes(x = Date, y = value/1000000000, group = `model run`), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation'),], aes(x = Date, y = value/1000000000, group = `model run`), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average'),], aes(x = Date, y = value/1000000000, group = `model run`), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) +
facet_wrap(~city, nrow = 3, scales = 'free') + theme_light(base_size = 16)
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run'),], aes(x = Date, y = value/1000000000, group = repetition), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) +
facet_wrap(~city, nrow = 3, scales = 'free') + theme_light(base_size = 16)
pltdata_lv <- data.frame('Date' = lasvegasobs$X, 'city' = rep('LasVegas', 144), 'repetition' = rep('observations', 144), 'value' = lasvegasobs[,1], check.names = F)
# merge everything
plotdata <- rbind(averages, pltdata_d, pltdata_lv, pltdata_p, sensivity)
# create model run type column
plotdata$runtype <- case_when(str_detect(plotdata$repetition, 'aver') ~ 'average',
str_detect(plotdata$repetition, 'obs') ~ 'observation',
.default = 'model run')
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run'),], aes(x = Date, y = value/1000000000, group = repetition), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) +
facet_wrap(~city, nrow = 3, scales = 'free') + theme_light(base_size = 16)
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = repetition), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = '')))
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = repetition, color = `starting condition`)) +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = '')))
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = repetition), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) +
facet_wrap(~`starting condition`, nrow = 6, scales = 'free') + theme_light(base_size = 16)
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver' & plotdata$`starting condition` == 'maximum'),], aes(x = Date, y = value/1000000000, group = repetition), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver' & plotdata$`starting condition` == 'maximum'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = '')))
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver' & plotdata$`starting condition` == 'Q3'),], aes(x = Date, y = value/1000000000, group = repetition), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver' & plotdata$`starting condition` == 'Q3'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = '')))
sensitivityanalysis <- read.csv(paste(abmresultsdir, '/sensitivityanalysis_observations.csv', sep = ''), header = F, na.string = "")
sensitivityanalysis$Date <- c.Date(NA, NA, NA, obsdates[1:142])
newcolumnnames2 <- paste(sensitivityanalysis[1,], sensitivityanalysis[2,], sensitivityanalysis[3,], sep = "_")
names(sensitivityanalysis)[1:91] <- newcolumnnames2[1:91]
sensitivityanalysis <- sensitivityanalysis[-c(1:3),]
sensitivity <- melt(sensitivityanalysis, id = 'Date')
sensitivityanalysis$Date <- c.Date(NA, NA, NA, obsdates[1:142])
sensitivityanalysis <- read.csv(paste(abmresultsdir, '/sensitivityanalysis_observations.csv', sep = ''), header = F, na.string = "")
sensitivityanalysis$Date <- c.Date(NA, NA, NA, obsdates[1:142])
newcolumnnames2 <- paste(sensitivityanalysis[1,], sensitivityanalysis[2,], sensitivityanalysis[3,], sep = "_")
names(sensitivityanalysis)[1:91] <- newcolumnnames2[1:91]
sensitivityanalysis <- sensitivityanalysis[-c(1:3),]
sensitivity <- melt(sensitivityanalysis, id = 'Date')
sensitivityanalysis
newcolumnnames2 <- paste(sensitivityanalysis[1,], sensitivityanalysis[2,], sensitivityanalysis[3,], sep = "_")
newcolumnnames2
sensitivityanalysis <- read.csv(paste(abmresultsdir, '/sensitivityanalysis_observations.csv', sep = ''), header = F, na.string = "")
sensitivityanalysis$Date <- c.Date(NA, NA, NA, obsdates[1:142])
View(sensivity)
View(sensitivityanalysis)
newcolumnnames2 <- paste(sensitivityanalysis[1,], sensitivityanalysis[2,], sensitivityanalysis[3,], sep = "_")
names(sensitivityanalysis)[1:90] <- newcolumnnames2[1:90]
sensitivityanalysis <- sensitivityanalysis[-c(1:3),]
sensitivity <- melt(sensitivityanalysis, id = 'Date')
sensitivity <- separate(sensivity, 'variable', into = c('city', 'starting condition', 'repetition'), sep = '_')
sensitivity <- separate(sensitivity, 'variable', into = c('city', 'starting condition', 'repetition'), sep = '_')
sensitivity$value <- as.numeric(sensitivity$value)
# organize city observations:
pltdata_d <- data.frame('Date' = denverobs$X, 'city' = rep('Denver', 144), 'repetition' = rep('observations', 144), 'value' = denverobs[,1], check.names = F)
pltdata_lv <- data.frame('Date' = lasvegasobs$X, 'city' = rep('LasVegas', 144), 'repetition' = rep('observations', 144), 'value' = lasvegasobs[,1], check.names = F)
pltdata_p <- data.frame('Date' = phoenixobs$X, 'city' = rep('Phoenix', 131), 'repetition' = rep('observations', 131), 'value' = phoenixobs[,1], check.names = F)
# get averages over 5 model runs
averages <- sensivity %>% group_by(Date, city, `starting condition`) %>% summarize(mean(value))
# get averages over 5 model runs
averages <- sensitivity %>% group_by(Date, city, `starting condition`) %>% summarize(mean(value))
names(averages)[4] <- 'value'
averages$repetition <- rep('average', 2556)
averages <- averages[,c(1,2,3,5,4)]
# merge everything
plotdata <- rbind(averages, pltdata_d, pltdata_lv, pltdata_p, sensitivity)
# create model run type column
plotdata$runtype <- case_when(str_detect(plotdata$repetition, 'aver') ~ 'average',
str_detect(plotdata$repetition, 'obs') ~ 'observation',
.default = 'model run')
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver' & plotdata$`starting condition` == 'Q3'),], aes(x = Date, y = value/1000000000, group = repetition), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver' & plotdata$`starting condition` == 'Q3'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = '')))
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver' & plotdata$`starting condition` == 'maximum'),], aes(x = Date, y = value/1000000000, group = repetition), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver' & plotdata$`starting condition` == 'maximum'),], aes(x = Date, y = value/1000000000, group = repetition), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = '')))
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = '')))
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`, color = `starting condition`)) +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = '')))
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`, color = `starting condition`)) +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`, group = `starting condition`)) +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = '')))
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`, color = `starting condition`)) +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`, color = `starting condition`)) +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = '')))
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`, color = `starting condition`)) +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = '')))
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`, color = `starting condition`)) +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) + theme_light()
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`, color = `starting condition`)) +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) + theme_light() +
scale_color_manual(values = c('#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462'))
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`, color = `starting condition`)) +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) + theme_light() +
scale_color_manual(values = c('#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462'), name = 'Starting Storage')
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) + theme_light()
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = c(`starting condition`, repetition)), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) + theme_light()
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = interaction(`starting condition`, repetition)), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) + theme_light()
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = interaction(`starting condition`, repetition)), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'Denver'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) +
facet_wrap(~city, nrow = 3, scales = 'free') + theme_light(base_size = 16)
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run'),], aes(x = Date, y = value/1000000000, group = interaction(`starting condition`, repetition)), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) +
facet_wrap(~city, nrow = 3, scales = 'free') + theme_light(base_size = 16)
getwd()
pdf('sensitivityanalysis_allcities.pdf', width = 10.5, height = 10)
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run'),], aes(x = Date, y = value/1000000000, group = interaction(`starting condition`, repetition)), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) +
facet_wrap(~city, nrow = 3, scales = 'free') + theme_light(base_size = 16)
dev.off()
View(plotdata)
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'LasVegas'),], aes(x = Date, y = value/1000000000, group = interaction(`starting condition`, repetition)), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'LasVegas'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'LasVegas'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = '')))
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run' & plotdata$city == 'LasVegas'),], aes(x = Date, y = value/1000000000, group = interaction(`starting condition`, repetition)), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation' & plotdata$city == 'LasVegas'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
#geom_line(data = plotdata[which(plotdata$runtype == 'average' & plotdata$city == 'LasVegas'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = '')))
path <- '/Users/rqo5125/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/GitHub/public/WaterConservation_ClimateChange_ABM'
# set directories
maindir <- path                                                             # main directory
datadir <- paste(path, '/observedData', sep = '')                           # directory for the input data
abmresultsdir <- paste(path, '/abmresults', sep = '')                       # directory for ABM results
rdatadir <- paste(path, '/supplementalcalculations/rdatafiles/', sep = '')  # directory for storing rdata files
sensitivityanalysis <- read.csv(paste(abmresultsdir, '/sensitivityanalysis_observations.csv', sep = ''), header = F, na.string = "")
# read in original data
denverobs <- read.csv(paste(datadir, '/DenverWaterBalData.csv', sep =''), header = F, na.string = "")
lasvegasobs <- read.csv(paste(datadir, '/LasVegasWaterBalData.csv', sep =''), header = F, na.string = "")
phoenixobs <- read.csv(paste(datadir, '/PhoenixWaterBalData.csv', sep =''), header = F, na.string = "")
# get dates
obsdates <- seq.Date(as.Date('2007-01-01'), as.Date('2018-12-31'), by = 'month')
# add dates to dataframes
denverobs$X <- obsdates; lasvegasobs$X <- obsdates; phoenixobs$X <- obsdates[1:131]
sensitivityanalysis$Date <- c.Date(NA, NA, NA, obsdates[1:142])
newcolumnnames2 <- paste(sensitivityanalysis[1,], sensitivityanalysis[2,], sensitivityanalysis[3,], sep = "_")
names(sensitivityanalysis)[1:90] <- newcolumnnames2[1:90]
sensitivityanalysis <- sensitivityanalysis[-c(1:3),]
sensitivity <- melt(sensitivityanalysis, id = 'Date')
# libraries
library(dplyr)
library(stringr)
library(tidyr)
library(reshape2)
library(ggplot2)
library(cowplot)
library(scales)
library(hydroGOF)
library(lubridate)
sensitivity <- melt(sensitivityanalysis, id = 'Date')
sensitivity <- separate(sensitivity, 'variable', into = c('city', 'starting condition', 'repetition'), sep = '_')
sensitivity$value <- as.numeric(sensitivity$value)
# organize city observations:
pltdata_d <- data.frame('Date' = denverobs$X, 'city' = rep('Denver', 144), 'repetition' = rep('observations', 144), 'value' = denverobs[,1], check.names = F)
pltdata_lv <- data.frame('Date' = lasvegasobs$X, 'city' = rep('LasVegas', 144), 'repetition' = rep('observations', 144), 'value' = lasvegasobs[,1], check.names = F)
pltdata_p <- data.frame('Date' = phoenixobs$X, 'city' = rep('Phoenix', 131), 'repetition' = rep('observations', 131), 'value' = phoenixobs[,1], check.names = F)
# get averages over 5 model runs
averages <- sensitivity %>% group_by(Date, city, `starting condition`) %>% summarize(mean(value))
names(averages)[4] <- 'value'
averages$repetition <- rep('average', 2556)
averages <- averages[,c(1,2,3,5,4)]
# merge everything
plotdata <- rbind(averages, pltdata_d, pltdata_lv, pltdata_p, sensitivity)
# create model run type column
plotdata$runtype <- case_when(str_detect(plotdata$repetition, 'aver') ~ 'average',
str_detect(plotdata$repetition, 'obs') ~ 'observation',
.default = 'model run')
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run'),], aes(x = Date, y = value/1000000000, group = interaction(`starting condition`, repetition)), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) +
facet_wrap(~city, nrow = 3, scales = 'free') + theme_light(base_size = 16)
pdf('sensitivityanalysis_allcities.pdf', width = 10.5, height = 10)
ggplot() + geom_line(data = plotdata[which(plotdata$runtype == 'model run'),], aes(x = Date, y = value/1000000000, group = interaction(`starting condition`, repetition)), color = '#D3D3D3') +
geom_line(data = plotdata[which(plotdata$runtype == 'observation'),], aes(x = Date, y = value/1000000000), color = 'red', linetype = 'dashed') +
geom_line(data = plotdata[which(plotdata$runtype == 'average'),], aes(x = Date, y = value/1000000000, group = `starting condition`), color = 'black') +
xlab('Date') + ylab(expression(paste('Storage (billions of ', m^3, ')', sep = ''))) +
facet_wrap(~city, nrow = 3, scales = 'free') + theme_light(base_size = 16)
dev.off()
